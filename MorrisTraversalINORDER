class Solution
{
    // Return a list containing the inorder traversal of the given tree
    ArrayList<Integer> inOrder(Node root)
    {
        // Code
        ArrayList<Integer> ans=new ArrayList<>();
        Node cur=root;
         while(cur!=null)
         {
          if(cur.left==null)
          {
              ans.add(cur.data);
              cur=cur.right;
          }
          else
          {
           Node t1=cur.left;
            while(t1.right!=null&&t1.right!=cur)
               t1=t1.right;
             if(t1.right==null)
             {
                 t1.right=cur;
                 cur=cur.left;
             }
             else
             {
                t1.right=null;
                ans.add(cur.data);
                cur=cur.right;
             }
           }
         }//while
         return ans;
    }
}
//time complexity-O(n)
// Space complexity-O(1)
